version: "3.9" # последняя версия оркестратора

volumes: # секция - тома
  pgdata: # создание тома, если отсавим пустоту то будут использованы параметры по умолчанию
  #redis_data:
    #external: true  - использовать внешний, ранее созданный том

netwroks: # секция - сети
  frontend: #
    driver: host # исползуем сеть хоста
  backend: # если не указать, то по умолчанию будет bridge
    # можно указать контейнеры и написать какая сеть к какому котейнеру принадлежит
  # если не указывать эту секцию, то будет указана сеть по умолчанию "название папки"_default и все контейнеры будут подключены к этой сети

services: # секция - сервисы, экземпляры приложения которые мы хотим запустить
  db: # название сервисапо которому можно обращаться из контейнера
    build: . # ищет докерфайл и собирает образ
    image: postgres:alpine # образ который нужно запустить
    restart: unless-stopped # необязательный параметр. Если сервис упал, будет перезапуск контейнера пока docker_compose не остановится
    networks: # необязательный параметр, указываем сети для контейнера - указываем сети из секции networks
      - frontend # сети это массив, поэтому указываем через дефис
      - backend  #
    volumes: # тома
      - pgdata: /var/lib/postgresql/data  # присваивается путь к указанному ранее тому
      - ./logs:/var/log  # создается новый том и сразу присваивается
    depends_on: # необязательный параметрю От каких сервисов зависим, то есть текущий сервис не запустится, пока не запустятся указанные здесь сервисы
      - redis
    ports: # привязка портов
      - "5432:5432"
    env_file: # необязательный параметр. Указываем файлы с переменными окружения для контейнера

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin1@yandex.ru"
      PGADMIN_DEFAULT_PASSWORD: "admin1"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "8888:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - test_net